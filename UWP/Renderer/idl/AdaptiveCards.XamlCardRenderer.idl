import "inspectable.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.idl";

#include <sdkddkver.h>

namespace AdaptiveCards
{
    namespace XamlCardRenderer
    {
        runtimeclass AdaptiveTextBlock;
        runtimeclass AdaptiveCard;
        runtimeclass AdaptiveImage;
        interface IAdaptiveCardElement;
        interface IAdaptiveTextBlock;
        interface IAdaptiveCard;
        interface IAdaptiveImage;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum CardElementSize
        {
            Auto = 0,
            Stretch,
            Small,
            Medium,
            Large
        } CardElementSize;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextSize
        {
            Small = 0,
            Normal,
            Medium,
            Large,
            ExtraLarge
        } TextSize;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextWeight
        {
            Lighter = 0,
            Normal,
            Bolder
        } TextWeight;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextColor
        {
            Default = 0,
            Dark,
            Light,
            Accent,
            Good,
            Warning,
            Attention
        } TextColor;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum HAlignment
        {
            Left = 0,
            Center,
            Right
        } HAlignment;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ElementType
        {
            TextBlock = 0,
            Image
        } ElementType;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ImageStyle {
            Normal = 0,
            Person
        } ImageStyle;

        declare
        {
            interface Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveCardElement*>;
        }

        [
            uuid(74D69C2F-7F1C-47FD-A319-F4B4E7F72EE9),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveCardElement : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);
            [propput] HRESULT ElementType([in] ElementType value);

            HRESULT Render([out, retval] Windows.UI.Xaml.UIElement** uiElement);
        };

        [
            uuid(f3b844da-2d6a-4003-8a57-4e5541fcd078),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextBlock)
        ]
        interface IAdaptiveTextBlock : IInspectable
        {
            [propget] HRESULT TextSize([out, retval] TextSize* value);
            [propput] HRESULT TextSize([in] TextSize value);

            [propget] HRESULT TextWeight([out, retval] TextWeight* value);
            [propput] HRESULT TextWeight([in] TextWeight value);

            [propget] HRESULT Text([out, retval] HSTRING* value);
            [propput] HRESULT Text([in] HSTRING value);

            [propget] HRESULT IsSubtle([out, retval] boolean* value);
            [propput] HRESULT IsSubtle([in] boolean value);

            [propget] HRESULT Wrap([out, retval] boolean* value);
            [propput] HRESULT Wrap([in] boolean value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextBlock
        {
            [default] interface IAdaptiveTextBlock;
            interface IAdaptiveCardElement;
        };

        [
            uuid(9F68A612-9DCB-4710-8121-A116BD33B69B),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCard),
        ]
        interface IAdaptiveCard : IInspectable
        {
            [propget] HRESULT Items([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass AdaptiveCard
        {
            [default] interface IAdaptiveCard;
        }

        [
            uuid(16452a2e-1152-47f3-90bd-6e4148b09669),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImage)
        ]
        interface IAdaptiveImage : IInspectable
        {
            [propget] HRESULT Uri([out, retval] Windows.Foundation.Uri** value);
            [propput] HRESULT Uri([in] Windows.Foundation.Uri* value);

            [propget] HRESULT ImageStyle([out, retval] ImageStyle* value);
            [propput] HRESULT ImageStyle([in] ImageStyle value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImage

        {
            [default] interface IAdaptiveImage;
            interface IAdaptiveCardElement;
        };

        runtimeclass XamlCardRenderer;
        runtimeclass ImageRenderResult;

        [flags]
        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum RenderOptions
        {
            None = 0x0,
            SupportsActionBar = 0x1,
            SupportsInlineActions = 0x2,
        }RenderOptions;

        [
            uuid(D6C7C240-53AF-4F34-87BE-301D9C68465D),
            version(NTDDI_WIN10_RS1),
            exclusiveto(ImageRenderResult),
        ]
        interface IImageRenderResult : IInspectable
        {
            [propget] HRESULT AltText([out, retval] HSTRING *altText);
            [propget] HRESULT ImageBuffer([out, retval] Windows.Storage.Streams.IBuffer** imageBuffer);
            [propget] HRESULT IsAllContentClippedOut([out, retval] boolean *allContentClipped);
            [propget] HRESULT ImageWidthPixels([out, retval] int *width);
            [propget] HRESULT ImageHeightPixels([out, retval] int *height);
        }

        [
            uuid(DB7C7BB8-C313-440A-A421-B52620107F8B),
            version(NTDDI_WIN10_RS1),
            exclusiveto(XamlCardRenderer),
        ]
        interface IXamlCardRenderer : IInspectable
        {
            HRESULT SetRenderOptions([in] RenderOptions options);
            HRESULT SetOverrideStyles([in] Windows.UI.Xaml.ResourceDictionary* overrideDictionary);
            HRESULT RenderCardAsXaml([in] AdaptiveCard* adaptiveCard,[out, retval] Windows.UI.Xaml.UIElement** root);
            HRESULT RenderCardAsImage([in] AdaptiveCard* adaptiveCard,[out, retval] Windows.Foundation.IAsyncOperation<ImageRenderResult>** result);
        }

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass ImageRenderResult
        {
            [default] interface IImageRenderResult;
        }

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass XamlCardRenderer
        {
            [default] interface IXamlCardRenderer;
        }
    }
}