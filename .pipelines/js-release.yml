# 'Allow scripts to access the OAuth token' was selected in pipeline.  Add the following YAML to any steps requiring access:
#       env:
#           MY_ACCESS_TOKEN: $(System.AccessToken)
# Variable 'system.prefergit' was defined in the Variables tab
name: $(date:yyMM).$(date:dd)$(rev:rrr)

pool:
  name: Azure Pipelines
  vmImage: ubuntu-20.04
  demands:
  - npm

parameters:
- name: target_packages
  displayName: "Which packages to publish? Provide YAML sequence of package details (name, increment-level, prerelease-identifier). See https://docs.npmjs.com/cli/v7/commands/npm-version for how to configure version increment."
  type: object
  default:
  - name: adaptivecards
    increment: prerelease
    prerelease-identifier: beta
  - name: adaptivecards-controls
    increment: prerelease
    prerelease-identifier: beta
  - name: adaptivecards-designer
    increment: prerelease
    prerelease-identifier: beta
  - name: adaptivecards-templating
    increment: prerelease
    prerelease-identifier: beta

# - name: adaptivecards_prerelease_identifier
#   displayName: "[adaptivecards] Prerelease identifier, used only if prerelease indicated above"
#   type: string
#   default: 'beta'

# - name: adaptivecards_controls_prerelease_identifier
#   displayName: "[adaptivecards-controls] Prerelease identifier, used only if prerelease indicated above"
#   type: string
#   default: 'beta'

# - name: adaptivecards_designer_prerelease_identifier
#   displayName: "[adaptivecards-designer] Prerelease identifier, used only if prerelease indicated above"
#   type: string
#   default: 'beta'

# - name: adaptivecards_templating_prerelease_identifier
#   displayName: "[adaptivecards-templating] Prerelease identifier, used only if prerelease indicated above"
#   type: string
#   default: 'beta'

# variables:
# - name: AC_ADAPTIVECARDS_CONTROLS_PRERELEASE_IDENTIFIER
#   value: ${{ parameters.adaptivecards_controls_prerelease_identifier }}
# - name: AC_ADAPTIVECARDS_DESIGNER_PRERELEASE_IDENTIFIER
#   value: ${{ parameters.adaptivecards_designer_prerelease_identifier }}
# - name: AC_ADAPTIVECARDS_TEMPLATING_PRERELEASE_IDENTIFIER
#   value: ${{ parameters.adaptivecards_templating_prerelease_identifier }}

steps:
- task: NodeTool@0
  name: NodeTool1
  displayName: Use Node 12.x
  inputs:
    versionSpec: 12.x

- bash: |
   npm ci 
   npx lerna bootstrap --ci
   npx lerna run release
   npm run audit-all -- --no-fix
  workingDirectory: source/nodejs
  displayName: 'Bash - lerna bootstrap'

- ${{ each target_package in parameters.target_packages }}:
  - task: Npm@1
    displayName: '[${{ target_package.name }}] npm version'
    inputs:
      command: custom
      workingDir: 'source/nodejs/${{ target_package.name }}'
      customCommand: 'version ${{ target_package.increment }} --preid ${{ target_package.prerelease_identifier }} --no-git-tag-version --no-push --yes'

- bash: |
   git status
  workingDirectory: source/nodejs
  displayName: 'Bash - lerna bootstrap'

- ${{ each target_package in parameters.target_packages }}:
  - task: Npm@1
    displayName: '[adaptivecards] npm publish'
    inputs:
      command: publish
      workingDir: source/nodejs/adaptivecards
      publishEndpoint: npmjs.com
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'Manual'))
