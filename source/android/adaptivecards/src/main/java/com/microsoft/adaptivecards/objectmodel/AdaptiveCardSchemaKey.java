/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.microsoft.adaptivecards.objectmodel;

public final class AdaptiveCardSchemaKey {
  public final static AdaptiveCardSchemaKey Accent = new AdaptiveCardSchemaKey("Accent", AdaptiveCardObjectModelJNI.AdaptiveCardSchemaKey_Accent_get());
  public final static AdaptiveCardSchemaKey ActionAlignment = new AdaptiveCardSchemaKey("ActionAlignment");
  public final static AdaptiveCardSchemaKey ActionMode = new AdaptiveCardSchemaKey("ActionMode");
  public final static AdaptiveCardSchemaKey ActionOrientation = new AdaptiveCardSchemaKey("ActionOrientation");
  public final static AdaptiveCardSchemaKey Actions = new AdaptiveCardSchemaKey("Actions");
  public final static AdaptiveCardSchemaKey ActionSetConfig = new AdaptiveCardSchemaKey("ActionSetConfig");
  public final static AdaptiveCardSchemaKey ActionsOrientation = new AdaptiveCardSchemaKey("ActionsOrientation");
  public final static AdaptiveCardSchemaKey AdaptiveCard = new AdaptiveCardSchemaKey("AdaptiveCard");
  public final static AdaptiveCardSchemaKey AltText = new AdaptiveCardSchemaKey("AltText");
  public final static AdaptiveCardSchemaKey Attention = new AdaptiveCardSchemaKey("Attention");
  public final static AdaptiveCardSchemaKey BackgroundColor = new AdaptiveCardSchemaKey("BackgroundColor");
  public final static AdaptiveCardSchemaKey BackgroundImage = new AdaptiveCardSchemaKey("BackgroundImage");
  public final static AdaptiveCardSchemaKey BackgroundImageUrl = new AdaptiveCardSchemaKey("BackgroundImageUrl");
  public final static AdaptiveCardSchemaKey BaseCardElement = new AdaptiveCardSchemaKey("BaseCardElement");
  public final static AdaptiveCardSchemaKey Body = new AdaptiveCardSchemaKey("Body");
  public final static AdaptiveCardSchemaKey BorderColor = new AdaptiveCardSchemaKey("BorderColor");
  public final static AdaptiveCardSchemaKey BorderThickness = new AdaptiveCardSchemaKey("BorderThickness");
  public final static AdaptiveCardSchemaKey Bottom = new AdaptiveCardSchemaKey("Bottom");
  public final static AdaptiveCardSchemaKey ButtonSpacing = new AdaptiveCardSchemaKey("ButtonSpacing");
  public final static AdaptiveCardSchemaKey Card = new AdaptiveCardSchemaKey("Card");
  public final static AdaptiveCardSchemaKey Center = new AdaptiveCardSchemaKey("Center");
  public final static AdaptiveCardSchemaKey Choices = new AdaptiveCardSchemaKey("Choices");
  public final static AdaptiveCardSchemaKey ChoiceSet = new AdaptiveCardSchemaKey("ChoiceSet");
  public final static AdaptiveCardSchemaKey Color = new AdaptiveCardSchemaKey("Color");
  public final static AdaptiveCardSchemaKey ColorConfig = new AdaptiveCardSchemaKey("ColorConfig");
  public final static AdaptiveCardSchemaKey Colors = new AdaptiveCardSchemaKey("Colors");
  public final static AdaptiveCardSchemaKey Column = new AdaptiveCardSchemaKey("Column");
  public final static AdaptiveCardSchemaKey Columns = new AdaptiveCardSchemaKey("Columns");
  public final static AdaptiveCardSchemaKey ColumnSet = new AdaptiveCardSchemaKey("ColumnSet");
  public final static AdaptiveCardSchemaKey Container = new AdaptiveCardSchemaKey("Container");
  public final static AdaptiveCardSchemaKey ContainerStyleConfig = new AdaptiveCardSchemaKey("ContainerStyleConfig");
  public final static AdaptiveCardSchemaKey Dark = new AdaptiveCardSchemaKey("Dark");
  public final static AdaptiveCardSchemaKey Data = new AdaptiveCardSchemaKey("Data");
  public final static AdaptiveCardSchemaKey DateInput = new AdaptiveCardSchemaKey("DateInput");
  public final static AdaptiveCardSchemaKey Default = new AdaptiveCardSchemaKey("Default");
  public final static AdaptiveCardSchemaKey Emphasis = new AdaptiveCardSchemaKey("Emphasis");
  public final static AdaptiveCardSchemaKey ExtraLarge = new AdaptiveCardSchemaKey("ExtraLarge");
  public final static AdaptiveCardSchemaKey Facts = new AdaptiveCardSchemaKey("Facts");
  public final static AdaptiveCardSchemaKey FactSet = new AdaptiveCardSchemaKey("FactSet");
  public final static AdaptiveCardSchemaKey FallbackText = new AdaptiveCardSchemaKey("FallbackText");
  public final static AdaptiveCardSchemaKey FontFamily = new AdaptiveCardSchemaKey("FontFamily");
  public final static AdaptiveCardSchemaKey FontSizes = new AdaptiveCardSchemaKey("FontSizes");
  public final static AdaptiveCardSchemaKey Good = new AdaptiveCardSchemaKey("Good");
  public final static AdaptiveCardSchemaKey HorizontalAlignment = new AdaptiveCardSchemaKey("HorizontalAlignment");
  public final static AdaptiveCardSchemaKey Id = new AdaptiveCardSchemaKey("Id");
  public final static AdaptiveCardSchemaKey Image = new AdaptiveCardSchemaKey("Image");
  public final static AdaptiveCardSchemaKey Images = new AdaptiveCardSchemaKey("Images");
  public final static AdaptiveCardSchemaKey ImageSet = new AdaptiveCardSchemaKey("ImageSet");
  public final static AdaptiveCardSchemaKey ImageSize = new AdaptiveCardSchemaKey("ImageSize");
  public final static AdaptiveCardSchemaKey ImageSizes = new AdaptiveCardSchemaKey("ImageSizes");
  public final static AdaptiveCardSchemaKey InlineTopMargin = new AdaptiveCardSchemaKey("InlineTopMargin");
  public final static AdaptiveCardSchemaKey IsMultiline = new AdaptiveCardSchemaKey("IsMultiline");
  public final static AdaptiveCardSchemaKey IsMultiSelect = new AdaptiveCardSchemaKey("IsMultiSelect");
  public final static AdaptiveCardSchemaKey IsRequired = new AdaptiveCardSchemaKey("IsRequired");
  public final static AdaptiveCardSchemaKey IsSelected = new AdaptiveCardSchemaKey("IsSelected");
  public final static AdaptiveCardSchemaKey IsSubtle = new AdaptiveCardSchemaKey("IsSubtle");
  public final static AdaptiveCardSchemaKey Items = new AdaptiveCardSchemaKey("Items");
  public final static AdaptiveCardSchemaKey Large = new AdaptiveCardSchemaKey("Large");
  public final static AdaptiveCardSchemaKey Left = new AdaptiveCardSchemaKey("Left");
  public final static AdaptiveCardSchemaKey Light = new AdaptiveCardSchemaKey("Light");
  public final static AdaptiveCardSchemaKey LineColor = new AdaptiveCardSchemaKey("LineColor");
  public final static AdaptiveCardSchemaKey LineThickness = new AdaptiveCardSchemaKey("LineThickness");
  public final static AdaptiveCardSchemaKey Max = new AdaptiveCardSchemaKey("Max");
  public final static AdaptiveCardSchemaKey MaxActions = new AdaptiveCardSchemaKey("MaxActions");
  public final static AdaptiveCardSchemaKey MaxLength = new AdaptiveCardSchemaKey("MaxLength");
  public final static AdaptiveCardSchemaKey MaxLines = new AdaptiveCardSchemaKey("MaxLines");
  public final static AdaptiveCardSchemaKey Medium = new AdaptiveCardSchemaKey("Medium");
  public final static AdaptiveCardSchemaKey Method = new AdaptiveCardSchemaKey("Method");
  public final static AdaptiveCardSchemaKey Min = new AdaptiveCardSchemaKey("Min");
  public final static AdaptiveCardSchemaKey MinVersion = new AdaptiveCardSchemaKey("MinVersion");
  public final static AdaptiveCardSchemaKey Normal = new AdaptiveCardSchemaKey("Normal");
  public final static AdaptiveCardSchemaKey NumberInput = new AdaptiveCardSchemaKey("NumberInput");
  public final static AdaptiveCardSchemaKey Padding = new AdaptiveCardSchemaKey("Padding");
  public final static AdaptiveCardSchemaKey Placeholder = new AdaptiveCardSchemaKey("Placeholder");
  public final static AdaptiveCardSchemaKey Right = new AdaptiveCardSchemaKey("Right");
  public final static AdaptiveCardSchemaKey SelectAction = new AdaptiveCardSchemaKey("SelectAction");
  public final static AdaptiveCardSchemaKey Separation = new AdaptiveCardSchemaKey("Separation");
  public final static AdaptiveCardSchemaKey ShowActionMode = new AdaptiveCardSchemaKey("ShowActionMode");
  public final static AdaptiveCardSchemaKey ShowCard = new AdaptiveCardSchemaKey("ShowCard");
  public final static AdaptiveCardSchemaKey ShowCardActionConfig = new AdaptiveCardSchemaKey("ShowCardActionConfig");
  public final static AdaptiveCardSchemaKey Size = new AdaptiveCardSchemaKey("Size");
  public final static AdaptiveCardSchemaKey Small = new AdaptiveCardSchemaKey("Small");
  public final static AdaptiveCardSchemaKey Spacing = new AdaptiveCardSchemaKey("Spacing");
  public final static AdaptiveCardSchemaKey SpacingDefinition = new AdaptiveCardSchemaKey("SpacingDefinition");
  public final static AdaptiveCardSchemaKey Speak = new AdaptiveCardSchemaKey("Speak");
  public final static AdaptiveCardSchemaKey Stretch = new AdaptiveCardSchemaKey("Stretch");
  public final static AdaptiveCardSchemaKey StrongSeparation = new AdaptiveCardSchemaKey("StrongSeparation");
  public final static AdaptiveCardSchemaKey Style = new AdaptiveCardSchemaKey("Style");
  public final static AdaptiveCardSchemaKey Subtle = new AdaptiveCardSchemaKey("Subtle");
  public final static AdaptiveCardSchemaKey SupportsInteractivity = new AdaptiveCardSchemaKey("SupportsInteractivity");
  public final static AdaptiveCardSchemaKey Text = new AdaptiveCardSchemaKey("Text");
  public final static AdaptiveCardSchemaKey TextBlock = new AdaptiveCardSchemaKey("TextBlock");
  public final static AdaptiveCardSchemaKey TextConfig = new AdaptiveCardSchemaKey("TextConfig");
  public final static AdaptiveCardSchemaKey TextInput = new AdaptiveCardSchemaKey("TextInput");
  public final static AdaptiveCardSchemaKey TextWeight = new AdaptiveCardSchemaKey("TextWeight");
  public final static AdaptiveCardSchemaKey TimeInput = new AdaptiveCardSchemaKey("TimeInput");
  public final static AdaptiveCardSchemaKey Title = new AdaptiveCardSchemaKey("Title");
  public final static AdaptiveCardSchemaKey ToggleInput = new AdaptiveCardSchemaKey("ToggleInput");
  public final static AdaptiveCardSchemaKey Top = new AdaptiveCardSchemaKey("Top");
  public final static AdaptiveCardSchemaKey Type = new AdaptiveCardSchemaKey("Type");
  public final static AdaptiveCardSchemaKey Url = new AdaptiveCardSchemaKey("Url");
  public final static AdaptiveCardSchemaKey Value = new AdaptiveCardSchemaKey("Value");
  public final static AdaptiveCardSchemaKey ValueOff = new AdaptiveCardSchemaKey("ValueOff");
  public final static AdaptiveCardSchemaKey ValueOn = new AdaptiveCardSchemaKey("ValueOn");
  public final static AdaptiveCardSchemaKey Version = new AdaptiveCardSchemaKey("Version");
  public final static AdaptiveCardSchemaKey Warning = new AdaptiveCardSchemaKey("Warning");
  public final static AdaptiveCardSchemaKey Weight = new AdaptiveCardSchemaKey("Weight");
  public final static AdaptiveCardSchemaKey Wrap = new AdaptiveCardSchemaKey("Wrap");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static AdaptiveCardSchemaKey swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + AdaptiveCardSchemaKey.class + " with value " + swigValue);
  }

  private AdaptiveCardSchemaKey(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private AdaptiveCardSchemaKey(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private AdaptiveCardSchemaKey(String swigName, AdaptiveCardSchemaKey swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static AdaptiveCardSchemaKey[] swigValues = { Accent, ActionAlignment, ActionMode, ActionOrientation, Actions, ActionSetConfig, ActionsOrientation, AdaptiveCard, AltText, Attention, BackgroundColor, BackgroundImage, BackgroundImageUrl, BaseCardElement, Body, BorderColor, BorderThickness, Bottom, ButtonSpacing, Card, Center, Choices, ChoiceSet, Color, ColorConfig, Colors, Column, Columns, ColumnSet, Container, ContainerStyleConfig, Dark, Data, DateInput, Default, Emphasis, ExtraLarge, Facts, FactSet, FallbackText, FontFamily, FontSizes, Good, HorizontalAlignment, Id, Image, Images, ImageSet, ImageSize, ImageSizes, InlineTopMargin, IsMultiline, IsMultiSelect, IsRequired, IsSelected, IsSubtle, Items, Large, Left, Light, LineColor, LineThickness, Max, MaxActions, MaxLength, MaxLines, Medium, Method, Min, MinVersion, Normal, NumberInput, Padding, Placeholder, Right, SelectAction, Separation, ShowActionMode, ShowCard, ShowCardActionConfig, Size, Small, Spacing, SpacingDefinition, Speak, Stretch, StrongSeparation, Style, Subtle, SupportsInteractivity, Text, TextBlock, TextConfig, TextInput, TextWeight, TimeInput, Title, ToggleInput, Top, Type, Url, Value, ValueOff, ValueOn, Version, Warning, Weight, Wrap };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

