/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#include <string>


#include <typeinfo>
#include <stdexcept>


#include <vector>
#include <stdexcept>


#include "pch.h"
#include <memory>
#include "../../../shared/cpp/ObjectModel/Enums.h"
#include "../../../shared/cpp/ObjectModel/BaseCardElement.h"
#include "../../../shared/cpp/ObjectModel/BaseActionElement.h"
#include "../../../shared/cpp/ObjectModel/Container.h"
#include "../../../shared/cpp/ObjectModel/TextBlock.h"
#include "../../../shared/cpp/ObjectModel/Image.h"
#include "../../../shared/cpp/ObjectModel/ImageSet.h"
#include "../../../shared/cpp/ObjectModel/Column.h"
#include "../../../shared/cpp/ObjectModel/ColumnSet.h"
#include "../../../shared/cpp/ObjectModel/Fact.h"
#include "../../../shared/cpp/ObjectModel/FactSet.h"
#include "../../../shared/cpp/ObjectModel/InputChoice.h"
#include "../../../shared/cpp/ObjectModel/InputChoiceSet.h"
#include "../../../shared/cpp/ObjectModel/AdaptiveCard.h"
#include "../../../shared/cpp/ObjectModel/AdaptiveCardParseException.h"
#include "../../../shared/cpp/ObjectModel/HostOptions.h"

SWIGINTERN std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::const_reference std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_BaseCardElement_Sg__Sg__get(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_BaseCardElement_Sg__Sg__set(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *self,int i,std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< std::shared_ptr< AdaptiveCards::Image > >::const_reference std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Image_Sg__Sg__get(std::vector< std::shared_ptr< AdaptiveCards::Image > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Image_Sg__Sg__set(std::vector< std::shared_ptr< AdaptiveCards::Image > > *self,int i,std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< std::shared_ptr< AdaptiveCards::Fact > >::const_reference std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Fact_Sg__Sg__get(std::vector< std::shared_ptr< AdaptiveCards::Fact > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Fact_Sg__Sg__set(std::vector< std::shared_ptr< AdaptiveCards::Fact > > *self,int i,std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< std::shared_ptr< AdaptiveCards::Column > >::const_reference std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Column_Sg__Sg__get(std::vector< std::shared_ptr< AdaptiveCards::Column > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Column_Sg__Sg__set(std::vector< std::shared_ptr< AdaptiveCards::Column > > *self,int i,std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

struct SWIG_null_deleter {
  void operator() (void const *) const {
  }
};
#define SWIG_NO_NULL_DELETER_0 , SWIG_null_deleter()
#define SWIG_NO_NULL_DELETER_1
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_NEW
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_OWN

SWIGINTERN AdaptiveCards::Container *AdaptiveCards_Container_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::Container *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::TextBlock *AdaptiveCards_TextBlock_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::TextBlock *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::Image *AdaptiveCards_Image_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::Image *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::ImageSet *AdaptiveCards_ImageSet_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::ImageSet *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::Column *AdaptiveCards_Column_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::Column *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::ColumnSet *AdaptiveCards_ColumnSet_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::ColumnSet *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::FactSet *AdaptiveCards_FactSet_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::FactSet *>(baseCardElement);
    }
SWIGINTERN AdaptiveCards::InputChoiceSet *AdaptiveCards_InputChoiceSet_dynamic_cast(AdaptiveCards::BaseCardElement *baseCardElement){
        return dynamic_cast<AdaptiveCards::InputChoiceSet *>(baseCardElement);
    }

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1BaseCardElementVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *)new std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >();
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1BaseCardElementVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::size_type arg1 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::size_type)jarg1; 
  result = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *)new std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >(arg1);
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  arg2 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  result = (bool)((std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type *arg2 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type tempnull2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  arg2 = jarg2 ? *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type **)&jarg2 : &tempnull2; 
  (arg1)->push_back((std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_BaseCardElement_Sg__Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type **)&jresult = *result ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElementVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type *arg3 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > >::value_type **)&jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_BaseCardElement_Sg__Sg__set(arg1,arg2,(std::shared_ptr< AdaptiveCards::BaseCardElement > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1BaseCardElementVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *)new std::vector< std::shared_ptr< AdaptiveCards::Image > >();
  *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::size_type arg1 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > >::size_type)jarg1; 
  result = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *)new std::vector< std::shared_ptr< AdaptiveCards::Image > >(arg1);
  *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::Image > > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::Image > > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  arg2 = (std::vector< std::shared_ptr< AdaptiveCards::Image > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  result = (bool)((std::vector< std::shared_ptr< AdaptiveCards::Image > > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type *arg2 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type tempnull2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  arg2 = jarg2 ? *(std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type **)&jarg2 : &tempnull2; 
  (arg1)->push_back((std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Image_Sg__Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  *(std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type **)&jresult = *result ? new std::shared_ptr< AdaptiveCards::Image >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type *arg3 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? *(std::vector< std::shared_ptr< AdaptiveCards::Image > >::value_type **)&jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Image_Sg__Sg__set(arg1,arg2,(std::shared_ptr< AdaptiveCards::Image > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ImageVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FactVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *)new std::vector< std::shared_ptr< AdaptiveCards::Fact > >();
  *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FactVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::size_type arg1 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > >::size_type)jarg1; 
  result = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *)new std::vector< std::shared_ptr< AdaptiveCards::Fact > >(arg1);
  *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::Fact > > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::Fact > > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  arg2 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  result = (bool)((std::vector< std::shared_ptr< AdaptiveCards::Fact > > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type *arg2 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type tempnull2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  arg2 = jarg2 ? *(std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type **)&jarg2 : &tempnull2; 
  (arg1)->push_back((std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Fact_Sg__Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  *(std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type **)&jresult = *result ? new std::shared_ptr< AdaptiveCards::Fact >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type *arg3 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? *(std::vector< std::shared_ptr< AdaptiveCards::Fact > >::value_type **)&jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Fact_Sg__Sg__set(arg1,arg2,(std::shared_ptr< AdaptiveCards::Fact > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1FactVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColumnVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *)new std::vector< std::shared_ptr< AdaptiveCards::Column > >();
  *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColumnVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::size_type arg1 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > >::size_type)jarg1; 
  result = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *)new std::vector< std::shared_ptr< AdaptiveCards::Column > >(arg1);
  *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::Column > > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  result = ((std::vector< std::shared_ptr< AdaptiveCards::Column > > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  arg2 = (std::vector< std::shared_ptr< AdaptiveCards::Column > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  result = (bool)((std::vector< std::shared_ptr< AdaptiveCards::Column > > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type *arg2 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type tempnull2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  arg2 = jarg2 ? *(std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type **)&jarg2 : &tempnull2; 
  (arg1)->push_back((std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Column_Sg__Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  *(std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type **)&jresult = *result ? new std::shared_ptr< AdaptiveCards::Column >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type *arg3 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? *(std::vector< std::shared_ptr< AdaptiveCards::Column > >::value_type **)&jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_AdaptiveCards_Column_Sg__Sg__set(arg1,arg2,(std::shared_ptr< AdaptiveCards::Column > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ColumnVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_EnableSharedFromThisContainer_1shared_1from_1this(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::enable_shared_from_this< AdaptiveCards::Container > *arg1 = (std::enable_shared_from_this< AdaptiveCards::Container > *) 0 ;
  std::shared_ptr< AdaptiveCards::Container > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::enable_shared_from_this< AdaptiveCards::Container > **)&jarg1; 
  result = (arg1)->shared_from_this();
  *(std::shared_ptr< AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Container >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1EnumHash(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::EnumHash *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::EnumHash *)new AdaptiveCards::EnumHash();
  *(AdaptiveCards::EnumHash **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1EnumHash(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::EnumHash *arg1 = (AdaptiveCards::EnumHash *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::EnumHash **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1CaseInsensitiveEqualTo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::CaseInsensitiveEqualTo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::CaseInsensitiveEqualTo *)new AdaptiveCards::CaseInsensitiveEqualTo();
  *(AdaptiveCards::CaseInsensitiveEqualTo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1CaseInsensitiveEqualTo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::CaseInsensitiveEqualTo *arg1 = (AdaptiveCards::CaseInsensitiveEqualTo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::CaseInsensitiveEqualTo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1CaseInsensitiveHash(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::CaseInsensitiveHash *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::CaseInsensitiveHash *)new AdaptiveCards::CaseInsensitiveHash();
  *(AdaptiveCards::CaseInsensitiveHash **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1CaseInsensitiveHash(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::CaseInsensitiveHash *arg1 = (AdaptiveCards::CaseInsensitiveHash *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::CaseInsensitiveHash **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardSchemaKey_1Type_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::AdaptiveCardSchemaKey result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::AdaptiveCardSchemaKey)AdaptiveCards::AdaptiveCardSchemaKey::Type;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextSize_1Small_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::TextSize result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextSize)AdaptiveCards::TextSize::Small;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextWeight_1Lighter_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::TextWeight result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextWeight)AdaptiveCards::TextWeight::Lighter;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextColor_1Default_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::TextColor result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextColor)AdaptiveCards::TextColor::Default;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HorizontalAlignment_1Left_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::HorizontalAlignment result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::HorizontalAlignment)AdaptiveCards::HorizontalAlignment::Left;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageStyle_1Normal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ImageStyle result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ImageStyle)AdaptiveCards::ImageStyle::Normal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSize_1Default_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ImageSize result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ImageSize)AdaptiveCards::ImageSize::Default;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextInputStyle_1Text_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::TextInputStyle result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextInputStyle)AdaptiveCards::TextInputStyle::Text;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_CardElementType_1Unsupported_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::CardElementType result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::CardElementType)AdaptiveCards::CardElementType::Unsupported;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionType_1Unsupported_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ActionType result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ActionType)AdaptiveCards::ActionType::Unsupported;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionAlignment_1Left_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ActionAlignment result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ActionAlignment)AdaptiveCards::ActionAlignment::Left;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ChoiceSetStyle_1Compact_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ChoiceSetStyle result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ChoiceSetStyle)AdaptiveCards::ChoiceSetStyle::Compact;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationStyle_1Default_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::SeparationStyle result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::SeparationStyle)AdaptiveCards::SeparationStyle::Default;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionsOrientation_1Vertical_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ActionsOrientation result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ActionsOrientation)AdaptiveCards::ActionsOrientation::Vertical;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionMode_1InlineEdgeToEdge_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ActionMode result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ActionMode)AdaptiveCards::ActionMode::InlineEdgeToEdge;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyle_1Normal_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  AdaptiveCards::ContainerStyle result;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ContainerStyle)AdaptiveCards::ContainerStyle::Normal;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardSchemaKeyToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCardSchemaKey arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::AdaptiveCardSchemaKey)jarg1; 
  result = AdaptiveCards::AdaptiveCardSchemaKeyToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardSchemaKeyFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::AdaptiveCardSchemaKey result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::AdaptiveCardSchemaKey)AdaptiveCards::AdaptiveCardSchemaKeyFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_CardElementTypeToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::CardElementType arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::CardElementType)jarg1; 
  result = AdaptiveCards::CardElementTypeToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_CardElementTypeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::CardElementType result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::CardElementType)AdaptiveCards::CardElementTypeFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionTypeToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ActionType arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ActionType)jarg1; 
  result = AdaptiveCards::ActionTypeToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionTypeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ActionType result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ActionType)AdaptiveCards::ActionTypeFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HorizontalAlignmentToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::HorizontalAlignment arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::HorizontalAlignment)jarg1; 
  result = AdaptiveCards::HorizontalAlignmentToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HorizontalAlignmentFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::HorizontalAlignment result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::HorizontalAlignment)AdaptiveCards::HorizontalAlignmentFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextColorToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::TextColor arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::TextColor)jarg1; 
  result = AdaptiveCards::TextColorToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextColorFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::TextColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::TextColor)AdaptiveCards::TextColorFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextWeightToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::TextWeight arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::TextWeight)jarg1; 
  result = AdaptiveCards::TextWeightToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextWeightFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::TextWeight result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::TextWeight)AdaptiveCards::TextWeightFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextSizeToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::TextSize arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::TextSize)jarg1; 
  result = AdaptiveCards::TextSizeToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextSizeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::TextSize result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::TextSize)AdaptiveCards::TextSizeFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ImageSize arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ImageSize)jarg1; 
  result = AdaptiveCards::ImageSizeToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ImageSize result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ImageSize)AdaptiveCards::ImageSizeFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationStyleToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  result = AdaptiveCards::SeparationStyleToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationStyleFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::SeparationStyle result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::SeparationStyle)AdaptiveCards::SeparationStyleFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageStyleToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ImageStyle arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ImageStyle)jarg1; 
  result = AdaptiveCards::ImageStyleToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageStyleFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ImageStyle result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ImageStyle)AdaptiveCards::ImageStyleFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionsOrientationToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ActionsOrientation arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ActionsOrientation)jarg1; 
  result = AdaptiveCards::ActionsOrientationToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionsOrientationFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ActionsOrientation result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ActionsOrientation)AdaptiveCards::ActionsOrientationFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionModeToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ActionMode arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ActionMode)jarg1; 
  result = AdaptiveCards::ActionModeToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionModeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ActionMode result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ActionMode)AdaptiveCards::ActionModeFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ChoiceSetStyleToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ChoiceSetStyle arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ChoiceSetStyle)jarg1; 
  result = AdaptiveCards::ChoiceSetStyleToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ChoiceSetStyleFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ChoiceSetStyle result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ChoiceSetStyle)AdaptiveCards::ChoiceSetStyleFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextInputStyleToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::TextInputStyle arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::TextInputStyle)jarg1; 
  result = AdaptiveCards::TextInputStyleToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextInputStyleFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::TextInputStyle result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::TextInputStyle)AdaptiveCards::TextInputStyleFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleToString(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  AdaptiveCards::ContainerStyle arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::ContainerStyle)jarg1; 
  result = AdaptiveCards::ContainerStyleToString(arg1);
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::ContainerStyle result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::ContainerStyle)AdaptiveCards::ContainerStyleFromString((std::string const &)*arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1BaseCardElement(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElement_1GetSeparationStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement const > *smartarg1 = 0 ;
  AdaptiveCards::SeparationStyle result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::SeparationStyle)((AdaptiveCards::BaseCardElement const *)arg1)->GetSeparationStyle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElement_1SetSeparationStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  AdaptiveCards::SeparationStyle arg2 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::SeparationStyle)jarg2; 
  (arg1)->SetSeparationStyle(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElement_1GetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::BaseCardElement const *)arg1)->GetSpeak();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElement_1SetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetSpeak(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElement_1GetElementType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement const > *smartarg1 = 0 ;
  AdaptiveCards::CardElementType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::CardElementType)((AdaptiveCards::BaseCardElement const *)arg1)->GetElementType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseCardElement_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1BaseActionElement(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseActionElement_1GetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::BaseActionElement const *)arg1)->GetSpeak();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseActionElement_1SetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetSpeak(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseActionElement_1GetTitle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::BaseActionElement const *)arg1)->GetTitle();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseActionElement_1SetTitle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetTitle(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseActionElement_1GetElementType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement const > *smartarg1 = 0 ;
  AdaptiveCards::ActionType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::ActionType)((AdaptiveCards::BaseActionElement const *)arg1)->GetElementType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BaseActionElement_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::BaseActionElement *arg1 = (AdaptiveCards::BaseActionElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseActionElement > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseActionElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseActionElement *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Container_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::Container *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::Container *)new AdaptiveCards::Container();
  
  *(std::shared_ptr<  AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Container >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Container_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jint jarg3) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  AdaptiveCards::ContainerStyle arg3 ;
  AdaptiveCards::Container *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (AdaptiveCards::ContainerStyle)jarg3; 
  result = (AdaptiveCards::Container *)new AdaptiveCards::Container(arg1,arg2,arg3);
  
  *(std::shared_ptr<  AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Container >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Container_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  AdaptiveCards::ContainerStyle arg3 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg4 = 0 ;
  AdaptiveCards::Container *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (AdaptiveCards::ContainerStyle)jarg3; 
  arg4 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::Container *)new AdaptiveCards::Container(arg1,arg2,arg3,*arg4);
  
  *(std::shared_ptr<  AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Container >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Container *arg1 = (AdaptiveCards::Container *) 0 ;
  std::shared_ptr< AdaptiveCards::Container > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Container > **)&jarg1;
  arg1 = (AdaptiveCards::Container *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1GetItems_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::Container *arg1 = (AdaptiveCards::Container *) 0 ;
  std::shared_ptr< AdaptiveCards::Container > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Container > **)&jarg1;
  arg1 = (AdaptiveCards::Container *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) &(arg1)->GetItems();
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1GetContainerStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::Container *arg1 = (AdaptiveCards::Container *) 0 ;
  std::shared_ptr< AdaptiveCards::Container const > *smartarg1 = 0 ;
  AdaptiveCards::ContainerStyle result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Container > **)&jarg1;
  arg1 = (AdaptiveCards::Container *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::ContainerStyle)((AdaptiveCards::Container const *)arg1)->GetContainerStyle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1SetContainerStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::Container *arg1 = (AdaptiveCards::Container *) 0 ;
  AdaptiveCards::ContainerStyle arg2 ;
  std::shared_ptr< AdaptiveCards::Container > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Container > **)&jarg1;
  arg1 = (AdaptiveCards::Container *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::ContainerStyle)jarg2; 
  (arg1)->SetContainerStyle(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Container > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::Container::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Container >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Container > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::Container::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Container >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::Container *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::Container *)AdaptiveCards_Container_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::Container > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Container >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1Container(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::Container *arg1 = (AdaptiveCards::Container *) 0 ;
  std::shared_ptr< AdaptiveCards::Container > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Container > **)&jarg1;
  arg1 = (AdaptiveCards::Container *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1TextBlock_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlock *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextBlock *)new AdaptiveCards::TextBlock();
  
  *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::TextBlock >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1TextBlock_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jint jarg4, jint jarg5, jint jarg6, jboolean jarg7, jboolean jarg8, jint jarg9, jint jarg10) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  AdaptiveCards::TextSize arg4 ;
  AdaptiveCards::TextWeight arg5 ;
  AdaptiveCards::TextColor arg6 ;
  bool arg7 ;
  bool arg8 ;
  int arg9 ;
  AdaptiveCards::HorizontalAlignment arg10 ;
  AdaptiveCards::TextBlock *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (AdaptiveCards::TextSize)jarg4; 
  arg5 = (AdaptiveCards::TextWeight)jarg5; 
  arg6 = (AdaptiveCards::TextColor)jarg6; 
  arg7 = jarg7 ? true : false; 
  arg8 = jarg8 ? true : false; 
  arg9 = (int)jarg9; 
  arg10 = (AdaptiveCards::HorizontalAlignment)jarg10; 
  result = (AdaptiveCards::TextBlock *)new AdaptiveCards::TextBlock(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::TextBlock >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::TextBlock::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::TextBlock > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::TextBlock >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::TextBlock::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::TextBlock > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::TextBlock >(result) : 0; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetText(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::TextBlock const *)arg1)->GetText();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetText(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetText(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetTextSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  AdaptiveCards::TextSize result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::TextSize)((AdaptiveCards::TextBlock const *)arg1)->GetTextSize();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetTextSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  AdaptiveCards::TextSize arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::TextSize)jarg2; 
  (arg1)->SetTextSize(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetTextWeight(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  AdaptiveCards::TextWeight result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::TextWeight)((AdaptiveCards::TextBlock const *)arg1)->GetTextWeight();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetTextWeight(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  AdaptiveCards::TextWeight arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::TextWeight)jarg2; 
  (arg1)->SetTextWeight(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetTextColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  AdaptiveCards::TextColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::TextColor)((AdaptiveCards::TextBlock const *)arg1)->GetTextColor();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetTextColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  AdaptiveCards::TextColor arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::TextColor)jarg2; 
  (arg1)->SetTextColor(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetWrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)((AdaptiveCards::TextBlock const *)arg1)->GetWrap();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetWrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  bool arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetWrap(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetIsSubtle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)((AdaptiveCards::TextBlock const *)arg1)->GetIsSubtle();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetIsSubtle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  bool arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetIsSubtle(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetMaxLines(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (unsigned int)((AdaptiveCards::TextBlock const *)arg1)->GetMaxLines();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetMaxLines(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  unsigned int arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (unsigned int)jarg2; 
  (arg1)->SetMaxLines(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1GetHorizontalAlignment(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock const > *smartarg1 = 0 ;
  AdaptiveCards::HorizontalAlignment result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::HorizontalAlignment)((AdaptiveCards::TextBlock const *)arg1)->GetHorizontalAlignment();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SetHorizontalAlignment(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  AdaptiveCards::HorizontalAlignment arg2 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::HorizontalAlignment)jarg2; 
  (arg1)->SetHorizontalAlignment(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::TextBlock *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::TextBlock *)AdaptiveCards_TextBlock_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::TextBlock >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1TextBlock(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::TextBlock *arg1 = (AdaptiveCards::TextBlock *) 0 ;
  std::shared_ptr< AdaptiveCards::TextBlock > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::TextBlock > **)&jarg1;
  arg1 = (AdaptiveCards::TextBlock *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Image_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::Image *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::Image *)new AdaptiveCards::Image();
  
  *(std::shared_ptr<  AdaptiveCards::Image > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Image >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Image_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jint jarg4, jint jarg5, jstring jarg6, jint jarg7) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  AdaptiveCards::ImageStyle arg4 ;
  AdaptiveCards::ImageSize arg5 ;
  std::string arg6 ;
  AdaptiveCards::HorizontalAlignment arg7 ;
  AdaptiveCards::Image *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (AdaptiveCards::ImageStyle)jarg4; 
  arg5 = (AdaptiveCards::ImageSize)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  (&arg6)->assign(arg6_pstr);
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  arg7 = (AdaptiveCards::HorizontalAlignment)jarg7; 
  result = (AdaptiveCards::Image *)new AdaptiveCards::Image(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  
  *(std::shared_ptr<  AdaptiveCards::Image > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Image >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Image > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::Image::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Image > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Image >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Image > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::Image::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Image > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Image >(result) : 0; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1GetUrl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::Image const *)arg1)->GetUrl();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1SetUrl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetUrl(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1GetImageStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image const > *smartarg1 = 0 ;
  AdaptiveCards::ImageStyle result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::ImageStyle)((AdaptiveCards::Image const *)arg1)->GetImageStyle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1SetImageStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  AdaptiveCards::ImageStyle arg2 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::ImageStyle)jarg2; 
  (arg1)->SetImageStyle(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1GetImageSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image const > *smartarg1 = 0 ;
  AdaptiveCards::ImageSize result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::ImageSize)((AdaptiveCards::Image const *)arg1)->GetImageSize();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1SetImageSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  AdaptiveCards::ImageSize arg2 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::ImageSize)jarg2; 
  (arg1)->SetImageSize(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1GetAltText(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::Image const *)arg1)->GetAltText();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1SetAltText(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetAltText(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1GetHorizontalAlignment(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image const > *smartarg1 = 0 ;
  AdaptiveCards::HorizontalAlignment result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::HorizontalAlignment)((AdaptiveCards::Image const *)arg1)->GetHorizontalAlignment();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1SetHorizontalAlignment(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  AdaptiveCards::HorizontalAlignment arg2 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::HorizontalAlignment)jarg2; 
  (arg1)->SetHorizontalAlignment(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::Image *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::Image *)AdaptiveCards_Image_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::Image > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Image >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1Image(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::Image *arg1 = (AdaptiveCards::Image *) 0 ;
  std::shared_ptr< AdaptiveCards::Image > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Image > **)&jarg1;
  arg1 = (AdaptiveCards::Image *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageSet_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ImageSet *)new AdaptiveCards::ImageSet();
  
  *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ImageSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageSet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  AdaptiveCards::ImageSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  result = (AdaptiveCards::ImageSet *)new AdaptiveCards::ImageSet(arg1,arg2);
  
  *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ImageSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageSet_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *arg3 = 0 ;
  AdaptiveCards::ImageSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::Image > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::ImageSet *)new AdaptiveCards::ImageSet(arg1,arg2,*arg3);
  
  *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ImageSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ImageSet *arg1 = (AdaptiveCards::ImageSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ImageSet > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jarg1;
  arg1 = (AdaptiveCards::ImageSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1GetImageSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::ImageSet *arg1 = (AdaptiveCards::ImageSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ImageSet const > *smartarg1 = 0 ;
  AdaptiveCards::ImageSize result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::ImageSet > **)&jarg1;
  arg1 = (AdaptiveCards::ImageSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::ImageSize)((AdaptiveCards::ImageSet const *)arg1)->GetImageSize();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1SetImageSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::ImageSet *arg1 = (AdaptiveCards::ImageSet *) 0 ;
  AdaptiveCards::ImageSize arg2 ;
  std::shared_ptr< AdaptiveCards::ImageSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jarg1;
  arg1 = (AdaptiveCards::ImageSet *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::ImageSize)jarg2; 
  (arg1)->SetImageSize(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1GetImages_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSet *arg1 = (AdaptiveCards::ImageSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ImageSet > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Image > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jarg1;
  arg1 = (AdaptiveCards::ImageSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::Image > > *) &(arg1)->GetImages();
  *(std::vector< std::shared_ptr< AdaptiveCards::Image > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::ImageSet > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::ImageSet::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::ImageSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::ImageSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::ImageSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::ImageSet *)AdaptiveCards_ImageSet_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ImageSet >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ImageSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ImageSet *arg1 = (AdaptiveCards::ImageSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ImageSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ImageSet > **)&jarg1;
  arg1 = (AdaptiveCards::ImageSet *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Column_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::Column *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::Column *)new AdaptiveCards::Column();
  
  *(std::shared_ptr<  AdaptiveCards::Column > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Column >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Column_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  AdaptiveCards::Column *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  result = (AdaptiveCards::Column *)new AdaptiveCards::Column(arg1,arg2,arg3);
  
  *(std::shared_ptr<  AdaptiveCards::Column > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Column >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Column_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jstring jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg4 = 0 ;
  AdaptiveCards::Column *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::Column *)new AdaptiveCards::Column(arg1,arg2,arg3,*arg4);
  
  *(std::shared_ptr<  AdaptiveCards::Column > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Column >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Column *arg1 = (AdaptiveCards::Column *) 0 ;
  std::shared_ptr< AdaptiveCards::Column > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Column > **)&jarg1;
  arg1 = (AdaptiveCards::Column *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Column > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::Column::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Column > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Column >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Column > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::Column::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Column > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Column >(result) : 0; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1GetSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Column *arg1 = (AdaptiveCards::Column *) 0 ;
  std::shared_ptr< AdaptiveCards::Column const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Column > **)&jarg1;
  arg1 = (AdaptiveCards::Column *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::Column const *)arg1)->GetSize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1SetSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::Column *arg1 = (AdaptiveCards::Column *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::Column > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Column > **)&jarg1;
  arg1 = (AdaptiveCards::Column *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetSize(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1GetItems_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::Column *arg1 = (AdaptiveCards::Column *) 0 ;
  std::shared_ptr< AdaptiveCards::Column > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Column > **)&jarg1;
  arg1 = (AdaptiveCards::Column *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) &(arg1)->GetItems();
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::Column *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::Column *)AdaptiveCards_Column_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::Column > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Column >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1Column(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::Column *arg1 = (AdaptiveCards::Column *) 0 ;
  std::shared_ptr< AdaptiveCards::Column > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Column > **)&jarg1;
  arg1 = (AdaptiveCards::Column *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColumnSet_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ColumnSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ColumnSet *)new AdaptiveCards::ColumnSet();
  
  *(std::shared_ptr<  AdaptiveCards::ColumnSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ColumnSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColumnSet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *arg1 = 0 ;
  AdaptiveCards::ColumnSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::Column > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::ColumnSet *)new AdaptiveCards::ColumnSet(*arg1);
  
  *(std::shared_ptr<  AdaptiveCards::ColumnSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ColumnSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSet_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ColumnSet *arg1 = (AdaptiveCards::ColumnSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ColumnSet > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ColumnSet > **)&jarg1;
  arg1 = (AdaptiveCards::ColumnSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSet_1GetColumns_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColumnSet *arg1 = (AdaptiveCards::ColumnSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ColumnSet > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Column > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ColumnSet > **)&jarg1;
  arg1 = (AdaptiveCards::ColumnSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::Column > > *) &(arg1)->GetColumns();
  *(std::vector< std::shared_ptr< AdaptiveCards::Column > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSet_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::ColumnSet > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::ColumnSet::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::ColumnSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::ColumnSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSet_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::ColumnSet > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::ColumnSet::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::ColumnSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::ColumnSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSet_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::ColumnSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::ColumnSet *)AdaptiveCards_ColumnSet_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::ColumnSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::ColumnSet >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ColumnSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ColumnSet *arg1 = (AdaptiveCards::ColumnSet *) 0 ;
  std::shared_ptr< AdaptiveCards::ColumnSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::ColumnSet > **)&jarg1;
  arg1 = (AdaptiveCards::ColumnSet *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Fact_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::Fact *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::Fact *)new AdaptiveCards::Fact();
  
  *(std::shared_ptr<  AdaptiveCards::Fact > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Fact >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1Fact_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  AdaptiveCards::Fact *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  result = (AdaptiveCards::Fact *)new AdaptiveCards::Fact(arg1,arg2,arg3);
  
  *(std::shared_ptr<  AdaptiveCards::Fact > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::Fact >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::shared_ptr< AdaptiveCards::Fact > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1GetTitle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::shared_ptr< AdaptiveCards::Fact const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::Fact const *)arg1)->GetTitle();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1SetTitle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::Fact > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetTitle(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1GetValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::shared_ptr< AdaptiveCards::Fact const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::Fact const *)arg1)->GetValue();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1SetValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::Fact > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetValue(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1GetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::shared_ptr< AdaptiveCards::Fact const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::Fact const *)arg1)->GetSpeak();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1SetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::Fact > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetSpeak(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Fact > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::Fact::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Fact > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Fact >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Fact_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::Fact > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::Fact::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::Fact > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::Fact >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1Fact(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::Fact *arg1 = (AdaptiveCards::Fact *) 0 ;
  std::shared_ptr< AdaptiveCards::Fact > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::Fact > **)&jarg1;
  arg1 = (AdaptiveCards::Fact *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FactSet_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::FactSet *)new AdaptiveCards::FactSet();
  
  *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::FactSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FactSet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  AdaptiveCards::FactSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  result = (AdaptiveCards::FactSet *)new AdaptiveCards::FactSet(arg1,arg2);
  
  *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::FactSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FactSet_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *arg3 = 0 ;
  AdaptiveCards::FactSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::Fact > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::FactSet *)new AdaptiveCards::FactSet(arg1,arg2,*arg3);
  
  *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::FactSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSet_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::FactSet *arg1 = (AdaptiveCards::FactSet *) 0 ;
  std::shared_ptr< AdaptiveCards::FactSet > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jarg1;
  arg1 = (AdaptiveCards::FactSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSet_1GetFacts_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSet *arg1 = (AdaptiveCards::FactSet *) 0 ;
  std::shared_ptr< AdaptiveCards::FactSet > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::Fact > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jarg1;
  arg1 = (AdaptiveCards::FactSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::Fact > > *) &(arg1)->GetFacts();
  *(std::vector< std::shared_ptr< AdaptiveCards::Fact > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSet_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::FactSet > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::FactSet::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::FactSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::FactSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSet_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::FactSet > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::FactSet::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::FactSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::FactSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSet_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::FactSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::FactSet *)AdaptiveCards_FactSet_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::FactSet >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1FactSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::FactSet *arg1 = (AdaptiveCards::FactSet *) 0 ;
  std::shared_ptr< AdaptiveCards::FactSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::FactSet > **)&jarg1;
  arg1 = (AdaptiveCards::FactSet *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1InputChoice(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::InputChoice *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::InputChoice *)new AdaptiveCards::InputChoice();
  *(AdaptiveCards::InputChoice **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1GetTitle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  result = ((AdaptiveCards::InputChoice const *)arg1)->GetTitle();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1SetTitle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetTitle(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1GetValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  result = ((AdaptiveCards::InputChoice const *)arg1)->GetValue();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1SetValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetValue(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1GetIsSelected(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  result = (bool)((AdaptiveCards::InputChoice const *)arg1)->GetIsSelected();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1SetIsSelected(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetIsSelected(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1GetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  result = ((AdaptiveCards::InputChoice const *)arg1)->GetSpeak();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1SetSpeak(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetSpeak(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  SwigValueWrapper< std::shared_ptr< AdaptiveCards::InputChoice > > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::InputChoice::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::InputChoice > **)&jresult = new std::shared_ptr< AdaptiveCards::InputChoice >((const std::shared_ptr< AdaptiveCards::InputChoice > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoice_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::shared_ptr< AdaptiveCards::InputChoice > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::InputChoice::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::InputChoice > **)&jresult = new std::shared_ptr< AdaptiveCards::InputChoice >((const std::shared_ptr< AdaptiveCards::InputChoice > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1InputChoice(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::InputChoice *arg1 = (AdaptiveCards::InputChoice *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::InputChoice **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1InputChoiceSet_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::InputChoiceSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::InputChoiceSet *)new AdaptiveCards::InputChoiceSet();
  
  *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::InputChoiceSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1InputChoiceSet_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  AdaptiveCards::InputChoiceSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  result = (AdaptiveCards::InputChoiceSet *)new AdaptiveCards::InputChoiceSet(arg1,arg2);
  
  *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::InputChoiceSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1InputChoiceSet_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationStyle arg1 ;
  std::string arg2 ;
  std::vector< std::shared_ptr< AdaptiveCards::InputChoice > > *arg3 = 0 ;
  AdaptiveCards::InputChoiceSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (AdaptiveCards::SeparationStyle)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(std::vector< std::shared_ptr< AdaptiveCards::InputChoice > > **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::InputChoice > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::InputChoiceSet *)new AdaptiveCards::InputChoiceSet(arg1,arg2,*arg3);
  
  *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::InputChoiceSet >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1Serialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Serialize();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1GetIsMultiSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet const > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)((AdaptiveCards::InputChoiceSet const *)arg1)->GetIsMultiSelect();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1SetIsMultiSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  bool arg2 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetIsMultiSelect(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1GetIsRequired(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet const > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)((AdaptiveCards::InputChoiceSet const *)arg1)->GetIsRequired();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1SetIsRequired(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  bool arg2 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetIsRequired(arg2);
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1GetChoiceSetStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet const > *smartarg1 = 0 ;
  AdaptiveCards::ChoiceSetStyle result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::ChoiceSetStyle)((AdaptiveCards::InputChoiceSet const *)arg1)->GetChoiceSetStyle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1SetChoiceSetStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  AdaptiveCards::ChoiceSetStyle arg2 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (AdaptiveCards::ChoiceSetStyle)jarg2; 
  (arg1)->SetChoiceSetStyle(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1GetChoices_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::InputChoice > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::InputChoice > > *) &(arg1)->GetChoices();
  *(std::vector< std::shared_ptr< AdaptiveCards::InputChoice > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  result = AdaptiveCards::InputChoiceSet::Deserialize((Json::Value const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::InputChoiceSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::InputChoiceSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = AdaptiveCards::InputChoiceSet::DeserializeFromString((std::string const &)*arg1);
  *(std::shared_ptr< AdaptiveCards::InputChoiceSet > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::InputChoiceSet >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1dynamic_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BaseCardElement *arg1 = (AdaptiveCards::BaseCardElement *) 0 ;
  std::shared_ptr< AdaptiveCards::BaseCardElement > *smartarg1 = 0 ;
  AdaptiveCards::InputChoiceSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::BaseCardElement > **)&jarg1;
  arg1 = (AdaptiveCards::BaseCardElement *)(smartarg1 ? smartarg1->get() : 0); 
  {
    result = (AdaptiveCards::InputChoiceSet *)AdaptiveCards_InputChoiceSet_dynamic_cast(arg1);
    if (!result) {
      jclass excep = jenv->FindClass("java/lang/ClassCastException");
      if (excep) {
        jenv->ThrowNew(excep, "dynamic_cast exception");
      }
    }
  }
  
  *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::InputChoiceSet >(result SWIG_NO_NULL_DELETER_0) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1InputChoiceSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::InputChoiceSet *arg1 = (AdaptiveCards::InputChoiceSet *) 0 ;
  std::shared_ptr< AdaptiveCards::InputChoiceSet > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::InputChoiceSet > **)&jarg1;
  arg1 = (AdaptiveCards::InputChoiceSet *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1AdaptiveCard_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::AdaptiveCard *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::AdaptiveCard *)new AdaptiveCards::AdaptiveCard();
  
  *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::AdaptiveCard >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1AdaptiveCard_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  AdaptiveCards::AdaptiveCard *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  (&arg4)->assign(arg4_pstr);
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  result = (AdaptiveCards::AdaptiveCard *)new AdaptiveCards::AdaptiveCard(arg1,arg2,arg3,arg4);
  
  *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::AdaptiveCard >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1AdaptiveCard_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_, jlong jarg6) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  std::string arg4 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *arg5 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseActionElement > > *arg6 = 0 ;
  AdaptiveCards::AdaptiveCard *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  (&arg3)->assign(arg3_pstr);
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return 0;
  (&arg4)->assign(arg4_pstr);
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > & reference is null");
    return 0;
  } 
  arg6 = *(std::vector< std::shared_ptr< AdaptiveCards::BaseActionElement > > **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::shared_ptr< AdaptiveCards::BaseActionElement > > & reference is null");
    return 0;
  } 
  result = (AdaptiveCards::AdaptiveCard *)new AdaptiveCards::AdaptiveCard(arg1,arg2,arg3,arg4,*arg5,*arg6);
  
  *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jresult = result ? new std::shared_ptr<  AdaptiveCards::AdaptiveCard >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetVersion(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::AdaptiveCard const *)arg1)->GetVersion();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1SetVersion(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetVersion(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetMinVersion(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::AdaptiveCard const *)arg1)->GetMinVersion();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1SetMinVersion(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetMinVersion(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetFallbackText(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::AdaptiveCard const *)arg1)->GetFallbackText();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1SetFallbackText(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetFallbackText(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetBackgroundImageUrl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard const > *smartarg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((AdaptiveCards::AdaptiveCard const *)arg1)->GetBackgroundImageUrl();
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1SetBackgroundImageUrl(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::string arg2 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->SetBackgroundImageUrl(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetBody_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > *) &(arg1)->GetBody();
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseCardElement > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetActions(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard const > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< AdaptiveCards::BaseActionElement > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< AdaptiveCards::BaseActionElement > > *) &((AdaptiveCards::AdaptiveCard const *)arg1)->GetActions();
  *(std::vector< std::shared_ptr< AdaptiveCards::BaseActionElement > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1GetElementType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard const > *smartarg1 = 0 ;
  AdaptiveCards::CardElementType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  result = (AdaptiveCards::CardElementType)((AdaptiveCards::AdaptiveCard const *)arg1)->GetElementType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1DeserializeFromFile(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  try {
    result = AdaptiveCards::AdaptiveCard::DeserializeFromFile((std::string const &)*arg1);
  }
  catch(AdaptiveCards::AdaptiveCardParseException &_e) {
    {
      jclass excep = jenv->FindClass("java/io/IOException");
      if (excep)
      jenv->ThrowNew(excep, (&_e)->what());
      return 0;
    }
  }
  
  *(std::shared_ptr< AdaptiveCards::AdaptiveCard > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::AdaptiveCard >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1Deserialize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  Json::Value *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Json::Value **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Json::Value const & reference is null");
    return 0;
  } 
  try {
    result = AdaptiveCards::AdaptiveCard::Deserialize((Json::Value const &)*arg1);
  }
  catch(AdaptiveCards::AdaptiveCardParseException &_e) {
    {
      jclass excep = jenv->FindClass("java/io/IOException");
      if (excep)
      jenv->ThrowNew(excep, (&_e)->what());
      return 0;
    }
  }
  
  *(std::shared_ptr< AdaptiveCards::AdaptiveCard > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::AdaptiveCard >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCard_1DeserializeFromString(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  try {
    result = AdaptiveCards::AdaptiveCard::DeserializeFromString((std::string const &)*arg1);
  }
  catch(AdaptiveCards::AdaptiveCardParseException &_e) {
    {
      jclass excep = jenv->FindClass("java/io/IOException");
      if (excep)
      jenv->ThrowNew(excep, (&_e)->what());
      return 0;
    }
  }
  
  *(std::shared_ptr< AdaptiveCards::AdaptiveCard > **)&jresult = result ? new std::shared_ptr< AdaptiveCards::AdaptiveCard >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1AdaptiveCard(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::AdaptiveCard *arg1 = (AdaptiveCards::AdaptiveCard *) 0 ;
  std::shared_ptr< AdaptiveCards::AdaptiveCard > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  AdaptiveCards::AdaptiveCard > **)&jarg1;
  arg1 = (AdaptiveCards::AdaptiveCard *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1AdaptiveCardParseException(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  AdaptiveCards::AdaptiveCardParseException *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (AdaptiveCards::AdaptiveCardParseException *)new AdaptiveCards::AdaptiveCardParseException((std::string const &)*arg1);
  *(AdaptiveCards::AdaptiveCardParseException **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1AdaptiveCardParseException(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::AdaptiveCardParseException *arg1 = (AdaptiveCards::AdaptiveCardParseException *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::AdaptiveCardParseException **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardParseException_1what(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCardParseException *arg1 = (AdaptiveCards::AdaptiveCardParseException *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::AdaptiveCardParseException **)&jarg1; 
  result = (char *)((AdaptiveCards::AdaptiveCardParseException const *)arg1)->what();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1left_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->left = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1left_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->left);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1right_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->right = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1right_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->right);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1top_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->top = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1top_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->top);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1bottom_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->bottom = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_BoundaryOptions_1bottom_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->bottom);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1BoundaryOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::BoundaryOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::BoundaryOptions *)new AdaptiveCards::BoundaryOptions();
  *(AdaptiveCards::BoundaryOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1BoundaryOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::BoundaryOptions *arg1 = (AdaptiveCards::BoundaryOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::BoundaryOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1smallFontSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->smallFontSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1smallFontSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->smallFontSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1normalFontSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->normalFontSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1normalFontSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->normalFontSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1mediumFontSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->mediumFontSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1mediumFontSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->mediumFontSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1largeFontSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->largeFontSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1largeFontSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->largeFontSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1extraLargeFontSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->extraLargeFontSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FontSizeOptions_1extraLargeFontSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->extraLargeFontSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FontSizeOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::FontSizeOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::FontSizeOptions *)new AdaptiveCards::FontSizeOptions();
  *(AdaptiveCards::FontSizeOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1FontSizeOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::FontSizeOptions *arg1 = (AdaptiveCards::FontSizeOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::FontSizeOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOption_1normal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::ColorOption *arg1 = (AdaptiveCards::ColorOption *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOption **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->normal = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOption_1normal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ColorOption *arg1 = (AdaptiveCards::ColorOption *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOption **)&jarg1; 
  result = (std::string *) & ((arg1)->normal);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOption_1subtle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::ColorOption *arg1 = (AdaptiveCards::ColorOption *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOption **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->subtle = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOption_1subtle_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ColorOption *arg1 = (AdaptiveCards::ColorOption *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOption **)&jarg1; 
  result = (std::string *) & ((arg1)->subtle);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColorOption(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ColorOption *)new AdaptiveCards::ColorOption();
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ColorOption(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ColorOption *arg1 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ColorOption **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1defaultColor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->defaultColor = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1defaultColor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->defaultColor);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1accent_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->accent = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1accent_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->accent);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1dark_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->dark = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1dark_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->dark);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1light_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->light = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1light_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->light);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1good_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->good = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1good_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->good);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1warning_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->warning = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1warning_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->warning);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1attention_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *arg2 = (AdaptiveCards::ColorOption *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOption **)&jarg2; 
  if (arg1) (arg1)->attention = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColorOptions_1attention_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  AdaptiveCards::ColorOption *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOption *)& ((arg1)->attention);
  *(AdaptiveCards::ColorOption **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColorOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ColorOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ColorOptions *)new AdaptiveCards::ColorOptions();
  *(AdaptiveCards::ColorOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ColorOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ColorOptions *arg1 = (AdaptiveCards::ColorOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ColorOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1weight_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  AdaptiveCards::TextWeight arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  arg2 = (AdaptiveCards::TextWeight)jarg2; 
  if (arg1) (arg1)->weight = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1weight_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  AdaptiveCards::TextWeight result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  result = (AdaptiveCards::TextWeight) ((arg1)->weight);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  AdaptiveCards::TextSize arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  arg2 = (AdaptiveCards::TextSize)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  AdaptiveCards::TextSize result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  result = (AdaptiveCards::TextSize) ((arg1)->size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1color_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  AdaptiveCards::TextColor arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  arg2 = (AdaptiveCards::TextColor)jarg2; 
  if (arg1) (arg1)->color = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1color_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  AdaptiveCards::TextColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  result = (AdaptiveCards::TextColor) ((arg1)->color);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1isSubtle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->isSubtle = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextOptions_1isSubtle_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  result = (bool) ((arg1)->isSubtle);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1TextOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::TextOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextOptions *)new AdaptiveCards::TextOptions();
  *(AdaptiveCards::TextOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1TextOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::TextOptions *arg1 = (AdaptiveCards::TextOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::TextOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationOptions_1spacing_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->spacing = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationOptions_1spacing_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->spacing);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationOptions_1lineThickness_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->lineThickness = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationOptions_1lineThickness_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->lineThickness);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationOptions_1lineColor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->lineColor = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_SeparationOptions_1lineColor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  result = (std::string *) & ((arg1)->lineColor);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1SeparationOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::SeparationOptions *)new AdaptiveCards::SeparationOptions();
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1SeparationOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::SeparationOptions *arg1 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::SeparationOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeOptions_1smallSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->smallSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeOptions_1smallSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->smallSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeOptions_1mediumSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->mediumSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeOptions_1mediumSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->mediumSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeOptions_1largeSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->largeSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSizeOptions_1largeSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->largeSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageSizeOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSizeOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ImageSizeOptions *)new AdaptiveCards::ImageSizeOptions();
  *(AdaptiveCards::ImageSizeOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ImageSizeOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ImageSizeOptions *arg1 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ImageSizeOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1smallSeparation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->smallSeparation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1smallSeparation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->smallSeparation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1normalSeparation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->normalSeparation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1normalSeparation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->normalSeparation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1mediumSeparation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->mediumSeparation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1mediumSeparation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->mediumSeparation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1largeSeparation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->largeSeparation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1largeSeparation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->largeSeparation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1extraLargeSeparation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->extraLargeSeparation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlockOptions_1extraLargeSeparation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->extraLargeSeparation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1TextBlockOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::TextBlockOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextBlockOptions *)new AdaptiveCards::TextBlockOptions();
  *(AdaptiveCards::TextBlockOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1TextBlockOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::TextBlockOptions *arg1 = (AdaptiveCards::TextBlockOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::TextBlockOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSetOptions_1imageSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::ImageSetOptions *arg1 = (AdaptiveCards::ImageSetOptions *) 0 ;
  AdaptiveCards::ImageSize arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSetOptions **)&jarg1; 
  arg2 = (AdaptiveCards::ImageSize)jarg2; 
  if (arg1) (arg1)->imageSize = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSetOptions_1imageSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::ImageSetOptions *arg1 = (AdaptiveCards::ImageSetOptions *) 0 ;
  AdaptiveCards::ImageSize result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSetOptions **)&jarg1; 
  result = (AdaptiveCards::ImageSize) ((arg1)->imageSize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSetOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ImageSetOptions *arg1 = (AdaptiveCards::ImageSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ImageSetOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSetOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSetOptions *arg1 = (AdaptiveCards::ImageSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageSetOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageSetOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ImageSetOptions *)new AdaptiveCards::ImageSetOptions();
  *(AdaptiveCards::ImageSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ImageSetOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ImageSetOptions *arg1 = (AdaptiveCards::ImageSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ImageSetOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColumnOptions *arg1 = (AdaptiveCards::ColumnOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColumnOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColumnOptions *arg1 = (AdaptiveCards::ColumnOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColumnOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColumnOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ColumnOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ColumnOptions *)new AdaptiveCards::ColumnOptions();
  *(AdaptiveCards::ColumnOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ColumnOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ColumnOptions *arg1 = (AdaptiveCards::ColumnOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ColumnOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1backgroundColor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->backgroundColor = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1backgroundColor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  result = (std::string *) & ((arg1)->backgroundColor);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1borderColor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->borderColor = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1borderColor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  result = (std::string *) & ((arg1)->borderColor);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1borderThickness_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  AdaptiveCards::BoundaryOptions *arg2 = (AdaptiveCards::BoundaryOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  arg2 = *(AdaptiveCards::BoundaryOptions **)&jarg2; 
  if (arg1) (arg1)->borderThickness = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1borderThickness_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  AdaptiveCards::BoundaryOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  result = (AdaptiveCards::BoundaryOptions *)& ((arg1)->borderThickness);
  *(AdaptiveCards::BoundaryOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1padding_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  AdaptiveCards::BoundaryOptions *arg2 = (AdaptiveCards::BoundaryOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  arg2 = *(AdaptiveCards::BoundaryOptions **)&jarg2; 
  if (arg1) (arg1)->padding = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerStyleConfig_1padding_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  AdaptiveCards::BoundaryOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  result = (AdaptiveCards::BoundaryOptions *)& ((arg1)->padding);
  *(AdaptiveCards::BoundaryOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ContainerStyleConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerStyleConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ContainerStyleConfig *)new AdaptiveCards::ContainerStyleConfig();
  *(AdaptiveCards::ContainerStyleConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ContainerStyleConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ContainerStyleConfig *arg1 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ContainerStyleConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerOptions_1normal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  AdaptiveCards::ContainerStyleConfig *arg2 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ContainerStyleConfig **)&jarg2; 
  if (arg1) (arg1)->normal = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerOptions_1normal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  AdaptiveCards::ContainerStyleConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  result = (AdaptiveCards::ContainerStyleConfig *)& ((arg1)->normal);
  *(AdaptiveCards::ContainerStyleConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerOptions_1emphasis_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  AdaptiveCards::ContainerStyleConfig *arg2 = (AdaptiveCards::ContainerStyleConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ContainerStyleConfig **)&jarg2; 
  if (arg1) (arg1)->emphasis = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ContainerOptions_1emphasis_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  AdaptiveCards::ContainerStyleConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  result = (AdaptiveCards::ContainerStyleConfig *)& ((arg1)->emphasis);
  *(AdaptiveCards::ContainerStyleConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ContainerOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ContainerOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ContainerOptions *)new AdaptiveCards::ContainerOptions();
  *(AdaptiveCards::ContainerOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ContainerOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ContainerOptions *arg1 = (AdaptiveCards::ContainerOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ContainerOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSetOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ColumnSetOptions *arg1 = (AdaptiveCards::ColumnSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ColumnSetOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSetOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ColumnSetOptions *arg1 = (AdaptiveCards::ColumnSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ColumnSetOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ColumnSetOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ColumnSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ColumnSetOptions *)new AdaptiveCards::ColumnSetOptions();
  *(AdaptiveCards::ColumnSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ColumnSetOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ColumnSetOptions *arg1 = (AdaptiveCards::ColumnSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ColumnSetOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ImageOptions *arg1 = (AdaptiveCards::ImageOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ImageOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageOptions *arg1 = (AdaptiveCards::ImageOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ImageOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ImageOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ImageOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ImageOptions *)new AdaptiveCards::ImageOptions();
  *(AdaptiveCards::ImageOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ImageOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ImageOptions *arg1 = (AdaptiveCards::ImageOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ImageOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardOptions_1padding_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::AdaptiveCardOptions *arg1 = (AdaptiveCards::AdaptiveCardOptions *) 0 ;
  AdaptiveCards::BoundaryOptions *arg2 = (AdaptiveCards::BoundaryOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::AdaptiveCardOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::BoundaryOptions **)&jarg2; 
  if (arg1) (arg1)->padding = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardOptions_1padding_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::AdaptiveCardOptions *arg1 = (AdaptiveCards::AdaptiveCardOptions *) 0 ;
  AdaptiveCards::BoundaryOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::AdaptiveCardOptions **)&jarg1; 
  result = (AdaptiveCards::BoundaryOptions *)& ((arg1)->padding);
  *(AdaptiveCards::BoundaryOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardOptions_1backgroundColor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::AdaptiveCardOptions *arg1 = (AdaptiveCards::AdaptiveCardOptions *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::AdaptiveCardOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->backgroundColor = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_AdaptiveCardOptions_1backgroundColor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::AdaptiveCardOptions *arg1 = (AdaptiveCards::AdaptiveCardOptions *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::AdaptiveCardOptions **)&jarg1; 
  result = (std::string *) & ((arg1)->backgroundColor);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1AdaptiveCardOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::AdaptiveCardOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::AdaptiveCardOptions *)new AdaptiveCards::AdaptiveCardOptions();
  *(AdaptiveCards::AdaptiveCardOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1AdaptiveCardOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::AdaptiveCardOptions *arg1 = (AdaptiveCards::AdaptiveCardOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::AdaptiveCardOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1title_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  AdaptiveCards::TextOptions *arg2 = (AdaptiveCards::TextOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::TextOptions **)&jarg2; 
  if (arg1) (arg1)->title = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1title_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  AdaptiveCards::TextOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  result = (AdaptiveCards::TextOptions *)& ((arg1)->title);
  *(AdaptiveCards::TextOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  AdaptiveCards::TextOptions *arg2 = (AdaptiveCards::TextOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::TextOptions **)&jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  AdaptiveCards::TextOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  result = (AdaptiveCards::TextOptions *)& ((arg1)->value);
  *(AdaptiveCards::TextOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1spacing_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->spacing = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1spacing_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->spacing);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSetOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1FactSetOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::FactSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::FactSetOptions *)new AdaptiveCards::FactSetOptions();
  *(AdaptiveCards::FactSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1FactSetOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::FactSetOptions *arg1 = (AdaptiveCards::FactSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::FactSetOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1actionMode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  AdaptiveCards::ActionMode arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  arg2 = (AdaptiveCards::ActionMode)jarg2; 
  if (arg1) (arg1)->actionMode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1actionMode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  AdaptiveCards::ActionMode result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  result = (AdaptiveCards::ActionMode) ((arg1)->actionMode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1backgroundColor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->backgroundColor = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1backgroundColor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  result = (std::string *) & ((arg1)->backgroundColor);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1inlineTopMargin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->inlineTopMargin = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1inlineTopMargin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->inlineTopMargin);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1padding_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  AdaptiveCards::BoundaryOptions *arg2 = (AdaptiveCards::BoundaryOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::BoundaryOptions **)&jarg2; 
  if (arg1) (arg1)->padding = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ShowCardOptions_1padding_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  AdaptiveCards::BoundaryOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  result = (AdaptiveCards::BoundaryOptions *)& ((arg1)->padding);
  *(AdaptiveCards::BoundaryOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ShowCardOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ShowCardOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ShowCardOptions *)new AdaptiveCards::ShowCardOptions();
  *(AdaptiveCards::ShowCardOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ShowCardOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ShowCardOptions *arg1 = (AdaptiveCards::ShowCardOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ShowCardOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1showCard_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::ShowCardOptions *arg2 = (AdaptiveCards::ShowCardOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ShowCardOptions **)&jarg2; 
  if (arg1) (arg1)->showCard = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1showCard_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::ShowCardOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  result = (AdaptiveCards::ShowCardOptions *)& ((arg1)->showCard);
  *(AdaptiveCards::ShowCardOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1actionsOrientation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::ActionsOrientation arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  arg2 = (AdaptiveCards::ActionsOrientation)jarg2; 
  if (arg1) (arg1)->actionsOrientation = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1actionsOrientation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::ActionsOrientation result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  result = (AdaptiveCards::ActionsOrientation) ((arg1)->actionsOrientation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1actionAlignment_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::ActionAlignment arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  arg2 = (AdaptiveCards::ActionAlignment)jarg2; 
  if (arg1) (arg1)->actionAlignment = arg2;
}


SWIGEXPORT jint JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1actionAlignment_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::ActionAlignment result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  result = (AdaptiveCards::ActionAlignment) ((arg1)->actionAlignment);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1buttonSpacing_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->buttonSpacing = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1buttonSpacing_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->buttonSpacing);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1maxActions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->maxActions = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1maxActions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->maxActions);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ActionOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ActionOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ActionOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ActionOptions *)new AdaptiveCards::ActionOptions();
  *(AdaptiveCards::ActionOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ActionOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ActionOptions *arg1 = (AdaptiveCards::ActionOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ActionOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_DateInputOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::DateInputOptions *arg1 = (AdaptiveCards::DateInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::DateInputOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_DateInputOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::DateInputOptions *arg1 = (AdaptiveCards::DateInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::DateInputOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1DateInputOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::DateInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::DateInputOptions *)new AdaptiveCards::DateInputOptions();
  *(AdaptiveCards::DateInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1DateInputOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::DateInputOptions *arg1 = (AdaptiveCards::DateInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::DateInputOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TimeInputOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TimeInputOptions *arg1 = (AdaptiveCards::TimeInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TimeInputOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TimeInputOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TimeInputOptions *arg1 = (AdaptiveCards::TimeInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TimeInputOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1TimeInputOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::TimeInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TimeInputOptions *)new AdaptiveCards::TimeInputOptions();
  *(AdaptiveCards::TimeInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1TimeInputOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::TimeInputOptions *arg1 = (AdaptiveCards::TimeInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::TimeInputOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_NumberInputOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::NumberInputOptions *arg1 = (AdaptiveCards::NumberInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::NumberInputOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_NumberInputOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::NumberInputOptions *arg1 = (AdaptiveCards::NumberInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::NumberInputOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1NumberInputOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::NumberInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::NumberInputOptions *)new AdaptiveCards::NumberInputOptions();
  *(AdaptiveCards::NumberInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1NumberInputOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::NumberInputOptions *arg1 = (AdaptiveCards::NumberInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::NumberInputOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ToggleInputOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ToggleInputOptions *arg1 = (AdaptiveCards::ToggleInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ToggleInputOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ToggleInputOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ToggleInputOptions *arg1 = (AdaptiveCards::ToggleInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ToggleInputOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ToggleInputOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ToggleInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ToggleInputOptions *)new AdaptiveCards::ToggleInputOptions();
  *(AdaptiveCards::ToggleInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ToggleInputOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ToggleInputOptions *arg1 = (AdaptiveCards::ToggleInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ToggleInputOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextInputOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::TextInputOptions *arg1 = (AdaptiveCards::TextInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::TextInputOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextInputOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::TextInputOptions *arg1 = (AdaptiveCards::TextInputOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::TextInputOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1TextInputOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::TextInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::TextInputOptions *)new AdaptiveCards::TextInputOptions();
  *(AdaptiveCards::TextInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1TextInputOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::TextInputOptions *arg1 = (AdaptiveCards::TextInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::TextInputOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ChoiceSetOptions_1separation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::ChoiceSetOptions *arg1 = (AdaptiveCards::ChoiceSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::ChoiceSetOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->separation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ChoiceSetOptions_1separation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::ChoiceSetOptions *arg1 = (AdaptiveCards::ChoiceSetOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::ChoiceSetOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->separation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1ChoiceSetOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::ChoiceSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::ChoiceSetOptions *)new AdaptiveCards::ChoiceSetOptions();
  *(AdaptiveCards::ChoiceSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1ChoiceSetOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::ChoiceSetOptions *arg1 = (AdaptiveCards::ChoiceSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::ChoiceSetOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1fontFamily_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->fontFamily = *arg2;
}


SWIGEXPORT jstring JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1fontFamily_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (std::string *) & ((arg1)->fontFamily);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1fontSizes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::FontSizeOptions *arg2 = (AdaptiveCards::FontSizeOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::FontSizeOptions **)&jarg2; 
  if (arg1) (arg1)->fontSizes = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1fontSizes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::FontSizeOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::FontSizeOptions *)& ((arg1)->fontSizes);
  *(AdaptiveCards::FontSizeOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1supportsInteractivity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->supportsInteractivity = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1supportsInteractivity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (bool) ((arg1)->supportsInteractivity);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1colors_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ColorOptions *arg2 = (AdaptiveCards::ColorOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColorOptions **)&jarg2; 
  if (arg1) (arg1)->colors = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1colors_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ColorOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ColorOptions *)& ((arg1)->colors);
  *(AdaptiveCards::ColorOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1imageSizes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ImageSizeOptions *arg2 = (AdaptiveCards::ImageSizeOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ImageSizeOptions **)&jarg2; 
  if (arg1) (arg1)->imageSizes = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1imageSizes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ImageSizeOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ImageSizeOptions *)& ((arg1)->imageSizes);
  *(AdaptiveCards::ImageSizeOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1maxActions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->maxActions = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1maxActions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (unsigned int) ((arg1)->maxActions);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1strongSeparation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::SeparationOptions *arg2 = (AdaptiveCards::SeparationOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::SeparationOptions **)&jarg2; 
  if (arg1) (arg1)->strongSeparation = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1strongSeparation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::SeparationOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::SeparationOptions *)& ((arg1)->strongSeparation);
  *(AdaptiveCards::SeparationOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1adaptiveCard_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::AdaptiveCardOptions *arg2 = (AdaptiveCards::AdaptiveCardOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::AdaptiveCardOptions **)&jarg2; 
  if (arg1) (arg1)->adaptiveCard = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1adaptiveCard_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::AdaptiveCardOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::AdaptiveCardOptions *)& ((arg1)->adaptiveCard);
  *(AdaptiveCards::AdaptiveCardOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1imageSet_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ImageSetOptions *arg2 = (AdaptiveCards::ImageSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ImageSetOptions **)&jarg2; 
  if (arg1) (arg1)->imageSet = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1imageSet_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ImageSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ImageSetOptions *)& ((arg1)->imageSet);
  *(AdaptiveCards::ImageSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1image_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ImageOptions *arg2 = (AdaptiveCards::ImageOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ImageOptions **)&jarg2; 
  if (arg1) (arg1)->image = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1image_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ImageOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ImageOptions *)& ((arg1)->image);
  *(AdaptiveCards::ImageOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1factSet_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::FactSetOptions *arg2 = (AdaptiveCards::FactSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::FactSetOptions **)&jarg2; 
  if (arg1) (arg1)->factSet = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1factSet_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::FactSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::FactSetOptions *)& ((arg1)->factSet);
  *(AdaptiveCards::FactSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1column_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ColumnOptions *arg2 = (AdaptiveCards::ColumnOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColumnOptions **)&jarg2; 
  if (arg1) (arg1)->column = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1column_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ColumnOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ColumnOptions *)& ((arg1)->column);
  *(AdaptiveCards::ColumnOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1container_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ContainerOptions *arg2 = (AdaptiveCards::ContainerOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ContainerOptions **)&jarg2; 
  if (arg1) (arg1)->container = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1container_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ContainerOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ContainerOptions *)& ((arg1)->container);
  *(AdaptiveCards::ContainerOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1columnSet_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ColumnSetOptions *arg2 = (AdaptiveCards::ColumnSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ColumnSetOptions **)&jarg2; 
  if (arg1) (arg1)->columnSet = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1columnSet_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ColumnSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ColumnSetOptions *)& ((arg1)->columnSet);
  *(AdaptiveCards::ColumnSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1textBlock_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::TextBlockOptions *arg2 = (AdaptiveCards::TextBlockOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::TextBlockOptions **)&jarg2; 
  if (arg1) (arg1)->textBlock = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1textBlock_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::TextBlockOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::TextBlockOptions *)& ((arg1)->textBlock);
  *(AdaptiveCards::TextBlockOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1dateInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::DateInputOptions *arg2 = (AdaptiveCards::DateInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::DateInputOptions **)&jarg2; 
  if (arg1) (arg1)->dateInput = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1dateInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::DateInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::DateInputOptions *)& ((arg1)->dateInput);
  *(AdaptiveCards::DateInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1timeInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::TimeInputOptions *arg2 = (AdaptiveCards::TimeInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::TimeInputOptions **)&jarg2; 
  if (arg1) (arg1)->timeInput = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1timeInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::TimeInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::TimeInputOptions *)& ((arg1)->timeInput);
  *(AdaptiveCards::TimeInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1numberInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::NumberInputOptions *arg2 = (AdaptiveCards::NumberInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::NumberInputOptions **)&jarg2; 
  if (arg1) (arg1)->numberInput = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1numberInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::NumberInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::NumberInputOptions *)& ((arg1)->numberInput);
  *(AdaptiveCards::NumberInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1toggleInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ToggleInputOptions *arg2 = (AdaptiveCards::ToggleInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ToggleInputOptions **)&jarg2; 
  if (arg1) (arg1)->toggleInput = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1toggleInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ToggleInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ToggleInputOptions *)& ((arg1)->toggleInput);
  *(AdaptiveCards::ToggleInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1textInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::TextInputOptions *arg2 = (AdaptiveCards::TextInputOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::TextInputOptions **)&jarg2; 
  if (arg1) (arg1)->textInput = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1textInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::TextInputOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::TextInputOptions *)& ((arg1)->textInput);
  *(AdaptiveCards::TextInputOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1choiceSet_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ChoiceSetOptions *arg2 = (AdaptiveCards::ChoiceSetOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ChoiceSetOptions **)&jarg2; 
  if (arg1) (arg1)->choiceSet = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1choiceSet_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ChoiceSetOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ChoiceSetOptions *)& ((arg1)->choiceSet);
  *(AdaptiveCards::ChoiceSetOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1actions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ActionOptions *arg2 = (AdaptiveCards::ActionOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  arg2 = *(AdaptiveCards::ActionOptions **)&jarg2; 
  if (arg1) (arg1)->actions = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_HostOptions_1actions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  AdaptiveCards::ActionOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  result = (AdaptiveCards::ActionOptions *)& ((arg1)->actions);
  *(AdaptiveCards::ActionOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_new_1HostOptions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  AdaptiveCards::HostOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (AdaptiveCards::HostOptions *)new AdaptiveCards::HostOptions();
  *(AdaptiveCards::HostOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_delete_1HostOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  AdaptiveCards::HostOptions *arg1 = (AdaptiveCards::HostOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(AdaptiveCards::HostOptions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Container_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::Container > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::Container > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_TextBlock_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::TextBlock > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::TextBlock > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Image_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::Image > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::Image > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ImageSet_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::ImageSet > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::ImageSet > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_Column_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::Column > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::Column > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_ColumnSet_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::ColumnSet > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::ColumnSet > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_FactSet_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::FactSet > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::FactSet > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_com_microsoft_adaptivecards_objectmodel_AdaptiveCardObjectModelJNI_InputChoiceSet_1SWIGSmartPtrUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    std::shared_ptr< AdaptiveCards::InputChoiceSet > *argp1;
    (void)jenv;
    (void)jcls;
    argp1 = *(std::shared_ptr< AdaptiveCards::InputChoiceSet > **)&jarg1;
    *(std::shared_ptr< AdaptiveCards::BaseCardElement > **)&baseptr = argp1 ? new std::shared_ptr< AdaptiveCards::BaseCardElement >(*argp1) : 0;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

