// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
"use strict";

var markedschema = require("marked-schema");
var marked = require("marked");
var fs = require("fs");

hexo.extend.generator.register("generator-specs", function (locals) {

    return new Promise(function (resolve, reject) {

        markedschema.buildModel({
            schema: "../../../schemas/adaptive-card.json",
            toc: "./schema-explorer-toc.yml",
            rootDefinition: "AdaptiveCard",
            examplesPath: "../../../samples/v1.*"
        }).then(function (schemaModel) {
            var pages = [];

            schemaModel.forEach(function (root) {
                root.children.forEach(function (child) {

					var markdown = markedschema.generateMarkdown.createPropertiesSummary(child.properties, null, true, true, child.version);

					markdown = "# " + child.name + "\n\n" + markdown;

					var endAutoGeneratedTag = "<!-- END AUTO-GENERATED -->";
					markdown = "<!-- AUTO-GENERATED: This section is auto-generated from schemas/adaptive-card.json. Do NOT add anything above this or edit anything inside, it MUST be the first thing in the document and will be overwritten. -->\n\n" + markdown + endAutoGeneratedTag;

					var fileName = "../../../specs/elements/" + child.name + ".md";

					fs.readFile(fileName, "utf8", (err, data) => {
						var finalFileContents;

						if (err) {
							// No existing file, add on the ## Rendering header
							finalFileContents = markdown + "\n\n## Rendering";
						} else {
							var endAutoGeneratedIndex = data.indexOf(endAutoGeneratedTag);
							if (endAutoGeneratedIndex === -1) {
								finalFileContents = markdown + "\n\n" + data;
							} else {
								endAutoGeneratedIndex += endAutoGeneratedTag.length;
								finalFileContents = markdown + data.substring(endAutoGeneratedIndex);
							}
						}

						fs.writeFile(fileName, finalFileContents, (err) => {

						});
					});


                });
            });

            resolve(pages);
        }).catch(function (err) {
            reject(err);
        });
    });
});
